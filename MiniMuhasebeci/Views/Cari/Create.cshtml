@model MiniMuhasebeci.Models.tblCari
<body id="divscroll">
    <head>
        <link href="~/Content/AddUpdate.css" rel="stylesheet" />
        <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    </head>
    <style>
        #divscroll {
            overflow-y: scroll;
        }
    </style>
    <br />
    <br />
    <br />
    <div class="container">
        <div class="wrapper">
            <div class="title"><span>Cari Kaydı</span></div>
            <div id="error" style="margin-left:5%; margin-top:5%;"></div>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <label for="id ismi"> Ünvan</label>
                <br />
                <div class="row">
                    @Html.EditorFor(model => model.Unvan, new { htmlAttributes = new { @class = "form-control", placeholder = "Ünvan Giriniz" } })
                    @Html.ValidationMessageFor(model => model.Unvan, "", new { @class = "text-danger" })
                </div>
                <label for="id ismi"> Ad </label>
                <br />
                <div class="row">
                    @Html.EditorFor(model => model.Ad, new { htmlAttributes = new { @class = "form-control", placeholder = "Ad Giriniz" } })
                    @Html.ValidationMessageFor(model => model.Ad, "", new { @class = "text-danger" })
                </div>
                <label for="id ismi"> Soyad </label>
                <br />
                <div class="row">
                    @Html.EditorFor(model => model.Soyad, new { htmlAttributes = new { @class = "form-control", placeholder = "Soyad Giriniz" } })
                    @Html.ValidationMessageFor(model => model.Soyad, "", new { @class = "text-danger" })
                </div>
                <label for="id ismi"> Adres </label>
                <br />
                <div class="row">
                    @Html.EditorFor(model => model.Adres, new { htmlAttributes = new { @class = "form-control", placeholder = "Adres Giriniz", } })
                    @Html.ValidationMessageFor(model => model.Adres, "", new { @class = "text-danger" })
                </div>
                <br />
                <label for="id ismi"> Telefon </label>
                <div class="row" onkeypress="isInputNumber(event)">
                    @Html.EditorFor(model => model.Telefon, new { htmlAttributes = new { @class = "form-control", placeholder = "Telefon Giriniz (xxx xxx xx xx)", type = "tel", pattern = "[0-9]{3} [0-9]{3} [0-9]{2} [0-9]{2}" } })
                    @Html.ValidationMessageFor(model => model.Telefon, "", new { @class = "text-danger" })
                </div>
                <br />
                <div class="row button form-group">
                    <div style="margin-left:10px;margin-right:10px;">
                        <button type="submit" id="btnCreate" value="Create" style="background:#31d660; border-color:white; color:white;">Kaydet</button>
                        <a href="@Url.Action("Index","Cari")" style="background:#f0d316; border-color:white; color:black;">Geri</a>
                    </div>
                </div>
            }
        </div>
    </div>
    @section control{
        <script>
            const unvan = document.getElementById('Unvan')
            const ad = document.getElementById('Ad')
            const soyad = document.getElementById('Soyad')
            const form = document.getElementById('form')
            const errorElement = document.getElementById('error')

            form.addEventListener('submit', (e) => {
                let messages = []
                if (ad.value === '' || ad.value == null) {
                    messages.push("Ad alanı boş geçilemez.")
                } else if (soyad.value === '' || soyad.value == null) {
                    messages.push("Soyad alanı boş geçilemez.")
                } else if (unvan.value === '' || unvan.value == null) {
                    messages.push("Ünvan alanı boş geçilemez.")
                }

                if (messages.length > 0) {
                    e.preventDefault()
                    errorElement.innerText = messages.join(', ')
                }
            });

        </script>
    }

</body>